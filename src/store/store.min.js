import{createApp}from"vue";import Vuex from"vuex";import VuexPersist from"vuex-persist";const vuexPersist=new VuexPersist({key:"vuex",storage:window.localStorage,reducer:state=>({user:state.user,completion:state.completion,address:state.address,inspection:state.inspection,offlineInspections:state.offlineInspections})});import App from"@/App.vue";const app=createApp(App);app.use(Vuex);export default new Vuex.Store({state:{user:{},completion:!1,address:0,inspection:0,offlineInspections:[]},getters:{user:state=>state.user,userID:state=>null!=state.user&&null!=state.user&&null!=state.user.id&&null!=state.user.id&&state.user.id,userNotifications:state=>null!=state.user.settings&&null!=state.user.settings.notifications&&state.user.settings.notifications,completion:state=>null!=state.completion&&null!=state.completion&&state.completion,address:state=>null!=state.address&&null!=state.address&&state.address,inspection:state=>null!=state.inspection&&null!=state.inspection&&state.inspection,offlineInspections:state=>null!=state.offlineInspections&&null!=state.offlineInspections&&state.offlineInspections,darkTheme:state=>null!=state.user.settings&&null!=state.user.settings.darkTheme&&!0===state.user.settings.darkTheme},mutations:{setUser(state,newUser){state.user=newUser},toggleCompletion(state,value){state.completion=value},changeAddress(state,newAddress){state.address=newAddress},changeInspection(state,newInspection){state.inspection=newInspection},setOfflineInspections(state,newOfflineInspections){state.offlineInspections=newOfflineInspections}},plugins:[vuexPersist.plugin]});
//# sourceMappingURL=store.min.js.map